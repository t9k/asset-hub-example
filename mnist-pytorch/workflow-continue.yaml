apiVersion: batch.tensorstack.dev/v1beta1
kind: WorkflowTemplate
metadata:
  name: train-pytorch
spec:
  params:
    - name: command
    - name: working_dir
    - name: image
    - name: pvc_name
  workspaces: []
  results: []
  type: Resource
  resource:
    successRules:
      fieldSelector: status.phase==Succeeded
    failureRules:
      fieldSelector: status.phase==Failed
    manifest: |
      apiVersion: batch.tensorstack.dev/v1beta1
      kind: PyTorchTrainingJob
      metadata:
        generateName: model-train-
      spec:
        runPolicy:
          cleanUpPolicy: None
          backoffLimit: 0
        replicaSpecs:
          - type: master
            replicas: 1
            restartPolicy: OnFailure
            template:
              spec:
                securityContext:
                  # Asset Hub Launcher Workflow use uid 1000 to download git code, data and model
                  runAsUser: 1000
                containers:
                  - command:
                      - sh
                      - '-c'
                      - $(params.command)
                    workingDir: $(params.working_dir)
                    imagePullPolicy: IfNotPresent
                    image: $(params.image)
                    name: pytorch
                    resources:
                      requests:
                        cpu: 4
                        memory: 2Gi
                      limits:
                        cpu: 8
                        memory: 4Gi
                    volumeMounts:
                      - mountPath: /t9k/mnt
                        name: data
                volumes:
                  - name: data
                    persistentVolumeClaim:
                      claimName: $(params.pvc_name)
          - type: worker
            replicas: 1
            restartPolicy: OnFailure
            template:
              spec:
                securityContext:
                  # Asset Hub Launcher Workflow use uid 1000 to download git code, data and model
                  runAsUser: 1000
                containers:
                  - command:
                      - sh
                      - '-c'
                      - $(params.command)
                    workingDir: $(params.working_dir)
                    imagePullPolicy: IfNotPresent
                    image: $(params.image)
                    name: pytorch
                    resources:
                      requests:
                        cpu: 4
                        memory: 2Gi
                      limits:
                        cpu: 8
                        memory: 4Gi
                    volumeMounts:
                      - mountPath: /t9k/mnt
                        name: data
                volumes:
                  - name: data
                    persistentVolumeClaim:
                      claimName: $(params.pvc_name)

---
apiVersion: batch.tensorstack.dev/v1beta1
kind: WorkflowRun
metadata:
  name: train-pytorch
  labels:
    batch.tensorstack.dev/workflowTemplate: train-pytorch
spec:
  params:
    - name: command
      value: "python asset-hub-example/mnist-pytorch/train.py --backend gloo --no_cuda --log_dir ./log --dataset_dir dataset --save_path saved_model/model_state_dict.pt --load_path model/model_state_dict.pt"
    - name: working_dir
      value: /t9k/mnt
    - name: image
      value: tsz.io/t9k/pytorch-1.12.1:sdk-0.4.0-t9kuser
    - name: pvc_name
      value: $(pvc-name)
  serviceAccountName: managed-project-sa
  timeout: 1h0m0s
  workflowTemplateRef: train-pytorch
  workspaces: []
